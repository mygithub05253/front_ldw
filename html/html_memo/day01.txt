서버와 클라이언트
- 클라이언트 : 서버에게 요청하는 대상
- 서버 : 요청받은 서비스를 응답해주는 대상
		- 서비스는 회원이 이용할 수 있는 기능들
		- 서버는 하나의 컴퓨터

웹
- 요청과 응답이 일어나는 장소

웹 브라우저(web Browser)
- 사용자의 요청에 맞는 주소로 찾아가서 인터넷 컨텐츠(문서, 그림, 멀티미디어, 파일 등)을 검색 및 열람 후 사용자에게 응답하기 위한 프로그램의 총칭
- 주요 웹 브라우저 : 모질라 파이어폭스, 구글 크롬, 마이크로소프트 엣지, 오페라, 사파리 등

프로토콜(Protocol) : 통신 규약
- 사람들끼리 소통할 때 서로 이해할 수 있는 공용어를 사용해야 하듯이 컴퓨터끼리도 공용어를 사용해야 함
- 이러한 공용어를 원활하게 통신하기 위해서 필요한 규약
	1) http:// (Hyper Text Transfer Protocol)
		클라이언트와 서버 간의 웹 페이지 등의 자원을 통신하는 규약
		텍스트로 통신하기 때문에 가로채어 본다면 누구든지 내용 확인 가능
	2) https:// (Hyper Text Transfer Protocol Secure Socket)
		SSL(Secure Socket Layer) 프로토콜을 이용하여 자원을 공개키 암호화 방식으로 암호화해서 통신하는 규약

IP(Internet Protocol)
- 사람이 태어나면 출생 신고를 하고 고유 번호인 주민번호를 발급 받음
- 이를 통해 서로를 구분하듯이 네트워크 상에서 인터넷에 접속할 때 다른 컴퓨터와 구분될 수 있도록 하는 고유 번호를 IP 주소라 함
- 클라이언트가 찾아갈 서버의 고유한 값, 컴퓨터가 컴퓨터를 찾을 때 쓰는 고유한 값

도메인(Domain)
- IP 주소는 기억하고 이해하기 힘들기 때문에 이를 위해서 이름을 부여할 수 있도록 한 것
- 도메인을 통해 IP 주소 검색 가능
- IP 주소로 직접 접근하면 연산이 필요한 부분이 제외되거나 프로토콜이 적용되지 않을 수 있기 때문에 반드시 도메인을 통해서 사이트에 접근하기

WWW(World Wide Web)
- 인터넷에 연결된 전 세계 컴퓨터들을 통해 사람들이 정보를 공유할 수 있는 정보 공간

W3C
- WWW를 위한 표준을 제정하고 관리하는 중립적인 기관
	- 어느 기업이 예를 들어 구글이나 애플이 자신만의 기술로 언어나 기술을 만들고, 그것의 라이센스 비용을 지불하라고 요구하면 독점하게 되기 때문에 그런 것들을 방지하기 위해서 웹 표준 제정

웹 표준(Web Standard)
- 웹에서 표준으로 사용되는 기술이나 규칙
- 특정 브라우저에서만 사용되는 비표준화된 기술을 배제하고 W3C의 토론을 통해 나온 권고안을 사용하는 것
- 웹 문서의 구조와 표현, 그리고 동작을 구분해서 사용하는 것

1. HTML(Hyper Text Markup Language)
- 웹 페이지에서 다른 페이지로 이동할 수 있도록 해주는 마크업 언어
- 마크업 언어 : 태그 방법 체계 => 태그 등을 이용해서 문서나 데이터의 구조를 기술하는 언어

2. CSS(Cascading Style Sheets)
- 구체적으로 어떤 스타일로 요소가 표시되는 지를 정하는 규격
- HTML은 문서를 구조화(레이아웃)할 수 있지만 꾸밀 수 없기 때문에 CSS를 통해 디자인하여 웹 페이지에서 내용과 스타일을 분리하고, 역할도 분리해줌

3. JS(Javascript)
- 화면 쪽에서 연산이 가능한 스크립트 언어
- 사용자의 다양한 이벤트 처리, 비동기 통신 등을 자유롭게 사용 가능
- HTML 안에서 태그 형태로 JS를 사용할 수도 있으며, 외부 파일로 제작 후 포함시켜 사용 가능
- 유효성 검사, 통신 등을 담당

4. XHTML(Extensible HTML)
- 기존에 사용되던 HTML 규격이 가진 문제점을 극복하고 보다 다양한 분야에 응용될 수 있도록 해주는 여러 가지 확장된 기능을 포함
- 하지만 XML 기반으로 만들어졌기 때문에 지원되지 않는 브라우저도 존재
- HTML과 XHTML은 사실상 큰 차이 없이 사용됨

5. XML(Extensible Markup Language)
- 어떠한 데이터를 설명하기 위해서 임의로 지은 태그로 데이터를 감싼다.
- 태그로 데이터를 설명하며, 이것이 데이터의 표시(Markup)가 되고 추가적인 데이터가 생길 경우 태그 추가와 태그 내부 내용 추가 가능
- 데이터 전달에 목적

===========================================================================================
HTML의 구성
- HTML은 기본적인 형태, 태그들로 이루어져 있음. <></>
- 열고 닫는 태그 존재
- head는 body에서 사용할 설정을 담고 있음
- body는 실질적으로 화면에서 나오는 정보들을 사용
- title의 역할

HTML의 요소
- <p> You are better </p>
   [1]           [2]           [3]

[1] : 여는 태그(Opening tag) : 요소의 이름(p)과 열고 닫는 꺽쇠 괄호로 구성
[2] : 내용(Content) : 요소의 내용이며, 단순한 텍스트를 의미
[3] : 닫는 태그(Closing tag) : 요소의 이름 앞에 슬래시(/) 존재

HTML의 주석
- <!-- 주석 --> : Ctrl + /

UTF-8(Unicode Transformation Format - 8 bit)
- UTF-8은 유니코드를 위한 가변 길이 문자 인코딩 방식 중 하나

HTML의 서식
- <strong>, <b> 태그 : 글씨 굵게
	두 태그의 표현은 동일하지만 사용 용도가 다름
	<b> 태그는 단순히 텍스트를 진하게 표시하는 역할
	<strong> 태그는 강조 뿐만 아니라 실제 페이지 내에서 중요한 부분을 브라우저에게 알려주는 역할
	브라우저에서 웹 접근성으로 인식되며, 스크린 리더로 페이지를 읽었을 때 거센 억양으로 음을 낼 수 있도록 강조

- <em>, <i> 태그 : 글씨 기울이기
	<i> 태그는 단순히 화면의 텍스트를 이태릭체로 표현
	<em> 태그는 그 내용이 중요하다는 의미도 함께 포함

- <mark> 태그 : 텍스트 하이라이팅 효과

- <del> 태그 // delete
	텍스트 중앙에 가로 줄을 그어서 텍스트를 지운 것과 같은 효과

- <ins> 태그 // insert
	텍스트 밑에 선을 추가하여 텍스트 강조 효과

- <sup>, <sub> 태그
	<sup> 태그는 위첨자
	<sub> 태그는 아래 첨자

HTML 엔티티(Entities) : 내용을 명령어로 인식하지 못하는 문법들
    - < : &lt;
    - > : &gt;
    - & : &amp;
    - " : &quot;
    - 공백 : &nbsp;
