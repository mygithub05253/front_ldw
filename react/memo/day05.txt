프로토타입
- 프로토타입은 다른 객체를 가리키는 내부 링크로 모든 자바스크립트 객체가 보유
- 프로토타입 체인 : 이러한 프로토타입으로 직접 객체 연결하는 것
=> 객체 지향 프로그래밍 특징 중 '상속'과 관련되어 있으며, 매번 새롭게 속성과 메서드를 정의할 필요 없이 작성된 메서드를 그대로 사용할 수 있게 해줌

================================================================================================

1. 참조 투명성
- 입력을 받아서 입력 받은 그대로를 출력하는 함수를 참조 투명, 즉 순수 함수(pure function)이라 함
- 하지만 입력을 받았을 때 다른 결과로 출력하거나 외부 함수에 영향을 끼치는 함수를 참조 불투명하다고 함
=> 이런 순수 함수가 아닌 함수에서 Side-effect가 발생 가능
- React는 모든 함수를 순수 함수로 유지할 것을 권장
=> 이로 인해 컴포넌트 재사용이 좋아지고 오류 검사 및 테스트도 좋아짐

2. Side-effect(부작용)
- 함수 내 특정 동작이 함수 외부에 영향을 끼쳐, 프로그램의 동작을 이해하기 어렵게 만드는 행위

ex) setTimeOut, setInterval, 서버와의 통신(fetch, axios) 등 ...
- 예측하기 어려운 함수 종료 후 시점에서 작업하고 싶은 경우
- 사용자가 요청했을 때 이후 또는 직전에 어떤 작업을 하고 싶은 경우

3. useEffect() => 클래스 컴포넌트에서 shouldComponentUpdate 역할을 수행
	3-1) 랜더링될 때마다 실행
	- useEffect(() => {})
	
	3-2) 최초 랜더링(마운트)할 때만 실행
	- useEffect(() => {}, [])

	3-3) 특정 컴포넌트가 변경 시 실행
	- useEffect(() => {}, [state])