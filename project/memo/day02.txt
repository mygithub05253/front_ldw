REST API
- REST API는 HTTP 요청을 통해 통신함으로서 리소스 내에서 레코드(CRUD라고도 함)의 작성, 읽기, 업데이트, 삭제 등의 표준 데이터베이스 기능을 수행하는 것을 의미

- method: "POST", // *GET, POST, PUT, DELETE 등
- mode: "cors", // no-cors, *cors, same-origin
=> 교차 출처 리소스 공유 (CORS)
=>실행 중인 웹 애플리케이션이 다른 출처의 선택한 자원에 접근할 수 있는 권한을 부여하도록 브라우저에 알려주는 체제

- cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
- credentials: "same-origin", // include, *same-origin, omit
=> 보통 fetch는 쿠키를 보내거나 받지 않음
=> 사이트에서 사용자 세션을 유지 관리해야하는 경우 인증되지 않는 요청이 발생
=> 쿠키를 전송하기 위해서는 자격증명(credentials) 옵션을 반드시 설정 의무

- credentials: 'include'를 추가한 경우,
=> Access-Control-Allow-Origin에 와일드카드를 사용할 수 없음
=> 자격 증명을 포함하려는 경우에는 반드시 정확한 출처를 지정 의무
=> CORS 해제 확장 프로그램을 사용하더라도 와일드카드를 지정한 요청은 실패할 것

- headers: {
	"Content-Type": "application/json",
	'Accept': 'application/json'
	// 'Content-Type': 'application/x-www-form-urlencoded',
  },

- redirect: "follow", // manual, *follow, error
  referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin,
  origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
=> referrerPolicy 옵션은 Referer 헤더를 위한 일반적인 규칙을 설정할 수 있다. 요청은 다음과 같이 3가지 타입으로 구분할 수 있다.

- body: JSON.stringify(data),
=> body의 데이터 유형은 반드시 "Content-Type" 헤더와 일치해야 함
=> 데이터를 주고받는 영역


